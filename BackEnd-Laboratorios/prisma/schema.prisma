// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Roles {
  id_rol      Int      @id @default(autoincrement())
  nombre_rol  String
  estado      String
  Usuarios    Usuario[]
}

model Detalle_Usuario {
  id_detalle_usuario Int    @id @default(autoincrement())
  nombres            String
  apellidos          String
  cedula             String
  fecha_nacimiento   DateTime
  correo             String
  celular            String?
  edad               Int
  genero             String
  estado             String
  contrasena         String
  Usuario            Usuario[]
}

model Usuario {
  id_usuario         Int              @id @default(autoincrement())
  id_detalle_usuario Int
  id_rol             Int
  Detalle_Usuario    Detalle_Usuario  @relation(fields: [id_detalle_usuario], references: [id_detalle_usuario])
  Roles              Roles            @relation(fields: [id_rol], references: [id_rol])
  Materias           Materia[]        @relation("UsuarioMaterias")
  Materia_Docente    Materia[]        @relation("MateriaDocente")
  Revision_Equipos   Revision_Equipo[]
  Inscripciones      Inscripcion[]
  Reportes           Reporte[]
}

model Carrera {
  id_carrera     Int               @id @default(autoincrement())
  nombre_carrera String
  estado         String
  Periodos_Academicos Periodo_Academico[]
}

model Periodo_Academico {
  id_periodo     Int      @id @default(autoincrement())
  nombre_periodo String
  detalle_periodo String?
  anio_lectivo   String
  estado         String
  id_carrera     Int
  Carrera        Carrera  @relation(fields: [id_carrera], references: [id_carrera])
  Cursos         Curso[]

  @@unique([id_periodo, id_carrera])
}

model Curso {
  id_curso       Int      @id @default(autoincrement())
  nombre_curso   String
  paralelo       String
  estado         String
  id_periodo     Int
  id_carrera     Int
  Periodo_Academico Periodo_Academico @relation(fields: [id_periodo, id_carrera], references: [id_periodo, id_carrera])
  Materias       Materia[]
}

model Catalogo_Materia {
  id_catalogo_materia Int      @id @default(autoincrement())
  nombre_materia      String
  Materias            Materia[]
}

model Materia {
  id_materia          Int      @id @default(autoincrement())
  id_catalogo_materia Int
  id_curso            Int
  id_docente          Int
  descripcion         String?
  estado              String
  Catalogo_Materia    Catalogo_Materia @relation(fields: [id_catalogo_materia], references: [id_catalogo_materia])
  Curso               Curso            @relation(fields: [id_curso], references: [id_curso])
  Usuario             Usuario          @relation(fields: [id_docente], references: [id_usuario], name: "MateriaDocente")
  Inscripciones       Inscripcion[]
  Reservas            Reserva[]
  Usuarios            Usuario[]        @relation("UsuarioMaterias")
}

model Inscripcion {
  id_inscripcion Int       @id @default(autoincrement())
  id_materia     Int
  id_estudiante  Int
  Materia        Materia   @relation(fields: [id_materia], references: [id_materia])
  Usuario        Usuario   @relation(fields: [id_estudiante], references: [id_usuario])
  Asistencias    Asistencia[]
}

model Laboratorio {
  id_laboratorio  Int                @id @default(autoincrement())
  nombre_laboratorio String
  ubicacion       String
  capacidad       Int
  Equipos_Laboratorio Equipo_Laboratorio[]
  Bitacoras       Bitacora[]
  Reservas        Reserva[]
}

model Equipo_Laboratorio {
  id_equipo       Int                @id @default(autoincrement())
  id_laboratorio  Int
  nombre_equipo   String
  fecha_ingreso   DateTime
  marca           String
  modelo          String?
  serie           String?
  proveedor       String
  descripcion     String
  estado          String
  Laboratorio     Laboratorio @relation(fields: [id_laboratorio], references: [id_laboratorio])
  Revision_Equipos Revision_Equipo[]
}

model Revision_Equipo {
  id_revision     Int      @id @default(autoincrement())
  id_equipo       Int
  id_responsable  Int
  fecha_inicio    DateTime
  tipo_revision   String
  estado_revision String
  novedad         String
  observaciones   String?
  solucion        String
  repuestos_utilizados String?
  costo_revision  Decimal
  fecha_fin       DateTime
  foto_antes      String?
  foto_despues    String?
  Equipo_Laboratorio Equipo_Laboratorio @relation(fields: [id_equipo], references: [id_equipo])
  Usuario         Usuario  @relation(fields: [id_responsable], references: [id_usuario])
}

model Reserva {
  id_reserva      Int      @id @default(autoincrement())
  id_laboratorio  Int
  id_materia      Int
  fecha_inicio    DateTime
  fecha_fin       DateTime
  motivo          String
  estado          String
  Laboratorio     Laboratorio @relation(fields: [id_laboratorio], references: [id_laboratorio])
  Materia         Materia @relation(fields: [id_materia], references: [id_materia])
  Asistencias     Asistencia[]
}

model Asistencia {
  id_asistencia   Int        @id @default(autoincrement())
  id_inscripcion  Int
  id_reserva      Int
  fecha_asistencia DateTime
  observaciones   String?
  Inscripcion     Inscripcion @relation(fields: [id_inscripcion], references: [id_inscripcion])
  Reserva         Reserva @relation(fields: [id_reserva], references: [id_reserva])
}

model Bitacora {
  id_bitacora     Int        @id @default(autoincrement())
  id_laboratorio  Int
  fecha           DateTime
  ruta            String
  Laboratorio     Laboratorio @relation(fields: [id_laboratorio], references: [id_laboratorio])
}

model Reporte {
  id_reporte      Int        @id @default(autoincrement())
  id_usuario      Int
  fecha           DateTime
  tipo_reporte    String
  Usuario         Usuario    @relation(fields: [id_usuario], references: [id_usuario])
}
