// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Roles {
  id_rol    Int    @id @default(autoincrement())
  nombre_rol String @db.VarChar(100)
  estado    String @db.VarChar(8)
  Usuarios  Usuario[]
}

model Detalle_Usuario {
  id_detalle_usuario Int    @id
  nombres            String @db.VarChar(50)
  apellidos          String @db.VarChar(50)
  cedula             String @db.VarChar(10)
  fecha_nacimiento   DateTime
  correo             String @db.VarChar(100)
  celular            String? @db.VarChar(20)
  edad               Int
  genero             String @db.VarChar(15)
  estado             String @db.VarChar(8)
  contrasena         String @db.VarChar(255)
  Usuarios           Usuario[]
}

model Usuario {
  id_usuario          Int             @id
  id_detalle_usuario  Int
  id_rol              Int
  Detalle_Usuario     Detalle_Usuario @relation(fields: [id_detalle_usuario], references: [id_detalle_usuario])
  Roles               Roles           @relation(fields: [id_rol], references: [id_rol])  Materias            Materia[]       
  Inscripciones       Inscripcion[]   
  Revision_Equipos    Revision_Equipo[]
}

model Carrera {
  id_carrera    Int     @id
  nombre_carrera String  @db.VarChar(100)
  estado        String  @db.VarChar(8)
  Cursos        Curso[]
}

model Periodo_Academico {
  id_periodo       Int    @id
  nombre_periodo   String @db.VarChar(100)
  detalle_periodo  String? @db.VarChar(255)
  anio_lectivo     String @db.VarChar(10)
  estado           String @db.VarChar(8)
  Cursos           Curso[]
}

model Curso {
  id_curso        Int    @id
  nombre_curso    String @db.VarChar(100)
  paralelo        String @db.VarChar(24)
  estado          String @db.VarChar(8)
  id_periodo      Int
  id_carrera      Int
  Periodo_Academico Periodo_Academico @relation(fields: [id_periodo], references: [id_periodo])
  Carrera         Carrera            @relation(fields: [id_carrera], references: [id_carrera])
  Materias        Materia[]
}

model Catalogo_Materia {
  id_catalogo_materia Int     @id @default(autoincrement())
  nombre_materia      String  @db.VarChar(255)
  Materias            Materia[]
}

model Materia {
  id_materia        Int               @id @default(autoincrement())
  id_catalogo_materia Int
  id_curso          Int
  id_docente        Int
  descripcion       String?            @db.VarChar(255)
  estado            String             @db.VarChar(8)
  Curso             Curso              @relation(fields: [id_curso], references: [id_curso])
  Catalogo_Materia  Catalogo_Materia   @relation(fields: [id_catalogo_materia], references: [id_catalogo_materia])
  Usuario           Usuario            @relation(fields: [id_docente], references: [id_usuario])
  Inscripciones     Inscripcion[]
  Reservas          Reserva[]
}

model Inscripcion {
  id_inscripcion Int     @id @default(autoincrement())
  id_materia     Int
  id_estudiante  Int
  Materia        Materia  @relation(fields: [id_materia], references: [id_materia])
  Usuario        Usuario  @relation(fields: [id_estudiante], references: [id_usuario])
  Asistencias    Asistencia[]
}

model Laboratorio {
  id_laboratorio    Int              @id @default(autoincrement())
  nombre_laboratorio String           @db.VarChar(100)
  ubicacion         String            @db.VarChar(255)
  capacidad         Int
  Equipos           Equipo_Laboratorio[]
  Reservas          Reserva[]
  Bitacoras         Bitacora[]
}

model Equipo_Laboratorio {
  id_equipo       Int              @id @default(autoincrement())
  id_laboratorio  Int
  codigo_equipo   String           @db.VarChar(100)
  descripcion     String?           @db.VarChar(255)
  fecha_ingreso   DateTime
  marca           String           @db.VarChar(100)
  modelo          String?           @db.VarChar(100)
  serie           String?           @db.VarChar(255)
  proveedor       String?           @db.VarChar(100)
  estado          String           @db.VarChar(12)
  Laboratorio     Laboratorio      @relation(fields: [id_laboratorio], references: [id_laboratorio])
  Revision_Equipos Revision_Equipo[]
}

model Revision_Equipo {
  id_revision       Int               @id @default(autoincrement())
  id_equipo         Int
  id_responsable    Int
  fecha_inicio      DateTime
  tipo_revision     String            @db.VarChar(50)
  estado_revision   String            @db.VarChar(20)
  novedad           String            @db.VarChar(50)
  observaciones     String?           @db.VarChar(255)
  solucion          String            @db.VarChar(255)
  repuestos_utilizados String?        @db.VarChar(255)
  costo_revision    Float?
  fecha_fin         DateTime
  foto_antes        String?           @db.VarChar(255)
  foto_despues      String?           @db.VarChar(255)
  Equipo_Laboratorio Equipo_Laboratorio @relation(fields: [id_equipo], references: [id_equipo])
  Usuario           Usuario           @relation(fields: [id_responsable], references: [id_usuario])
}

model Reserva {
  id_reserva     Int       @id @default(autoincrement())
  id_laboratorio Int
  id_materia     Int
  fecha_inicio   DateTime
  fecha_fin      DateTime
  motivo         String    @db.VarChar(255)
  estado         String    @db.VarChar(8)
  Laboratorio    Laboratorio @relation(fields: [id_laboratorio], references: [id_laboratorio])
  Materia        Materia    @relation(fields: [id_materia], references: [id_materia])
  Asistencias    Asistencia[]
}

model Asistencia {
  id_asistencia   Int    @id @default(autoincrement())
  id_inscripcion  Int
  id_reserva      Int
  tipo_asistencia String 
  fecha_asistencia DateTime
  observaciones   String? @db.VarChar(255)
  Inscripcion     Inscripcion @relation(fields: [id_inscripcion], references: [id_inscripcion])
  Reserva         Reserva     @relation(fields: [id_reserva], references: [id_reserva])
}

model Bitacora {
  id_bitacora   Int     @id @default(autoincrement())
  id_laboratorio Int
  fecha         DateTime
  ruta          String  @db.VarChar(255)
  Laboratorio   Laboratorio @relation(fields: [id_laboratorio], references: [id_laboratorio])
}
